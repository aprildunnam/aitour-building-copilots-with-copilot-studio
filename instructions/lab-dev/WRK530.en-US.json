{"Id":279065,"Name":"Build your own Copilots with Microsoft Copilot Studio","Enabled":true,"Editable":true,"Instructions":"# @lab.Title\n\n\nIn this lab you\u2019ll work with Microsoft Copilot Studio to build your first agent using Generative answers, you\u2019ll then publish this agent to Microsoft Teams.\n\nIn the second half of this workshop, you\u0027ll extend your agent with a custom connector that you\u2019ll build in Visual Studio, publish this as custom connector and then add this as an action to your agent.\n\nThe green text with the \u002B\u002B\u002Bicon\u002B\u002B\u002B can be clicked on and will be typed automatically into the VM, For example, please click in the password text box and then click the password: \u002B\u002B\u002B@lab.VirtualMachine(WRK530).Password\u002B\u002B\u002B\n\n\u003E [!note] To ensure text is entered accurately avoid interacting or clicking in the VM until the text has finished being typed\n\n===\n\n# Build Your First Agent\n\nTo start you\u0027re going to build your very first agent powered by Generative answers.\n\n1. Open Microsoft Edge and navigate to\n\n    \u002B\u002B\u002Bhttps://copilotstudio.microsoft.com\u002B\u002B\u002B\n\n2. Log in with \n\u003Cbr\u003E\n    **Username:** \u002B\u002B\u002B@lab.CloudCredential(CSBatch1).UserPrincipalName\u002B\u002B\u002B\n\n\n    **Password:** \u002B\u002B\u002B@lab.CloudCredential(CSBatch1).Password\u002B\u002B\u002B\n\n    **Temporary Access Password:** \u002B\u002B\u002B@lab.Variable(TAP)\u002B\u002B\u002B\n\n\u003C!-- 3. If you see a message about needing to setup additional security like is shown below, select **Ask later**\n\n    !IMAGE [pic1_official.png](instructions279065/pic1_official.png) --\u003E\n\n3. If you see a welcome screen like is shown below, select the country/region that you\u2019re in from the dropdown and select Get Started\n\u003Cbr\u003E\n    !IMAGE [pic2.png](instructions279065/pic2.png)\n4. If you see a welcome message as shown in the screenshot below, select Skip.\n\u003Cbr\u003E\n    !IMAGE [step6.png](instructions279065/step6.png)\n6. In the left nav click **\u002B Create** button to start creating a new agent\n\u003Cbr\u003E\n    !IMAGE[create.png](instructions279065/create.png)\n7. Click **New agent**\n\u003Cbr\u003E\n    !IMAGE[create-new-agent.png](instructions279065/create-new-agent.png)\n8. While we could use natural language to setup the agent for this exercise, we will skip directly to the configuration Click the Skip to configure button\n\u003Cbr\u003E\n    !IMAGE [step9.jpg](instructions279065/step9.jpg)\n9. Give your agent a unique name by including your first and last name, for example \u0022Jane Does Agent\u0022 and then click the **\u002B Add knowledge**\n\u003Cbr\u003E\n    !IMAGE [step10.jpg](instructions279065/step10.jpg)\n10. In the Add available knowledge sources dialog click the **Public websites** button\n\u003Cbr\u003E\n    !IMAGE [step11.jpg](instructions279065/step11.jpg)\n11. In the Add public websites dialog enter \u002B\u002B\u002Bwww.microsoft.com\u002B\u002B\u002B then click the **Add** button\n\u003Cbr\u003E\n    !IMAGE [step12.jpg](instructions279065/step12.jpg)\n12. With the new knowledge source added click the **Add** button in the bottom right of the dialog to include this in your new agent\n\u003Cbr\u003E\n    !IMAGE[knowledge.png](instructions279065/knowledge.png)\n13. With the dialog closed confirm the name and the knowledge source of your new agent are correct then in the top right click the **Create** button\n\u003Cbr\u003E\n    !IMAGE [step14.png](instructions279065/step14.png)\n14. In the agent test window enter \u002B\u002B\u002BWhat is Microsoft Copilot Studio?\u002B\u002B\u002B and press enter\n\n    \u003E [!note] If you don\u0027t see the test your agent pane you can open this by clicking on Test button in the top right corner of the screen to open the test pane\n\n    !IMAGE[test-your-agent.png](instructions279065/test-your-agent.png)\n\nCongratulations! you just built your first agent powered by generative answers.\n\n===\n\n# Publishing Your Agent\n\nNow that you have confirmed your agent is working as expected let\u2019s publish the agent this allows you to then use your agent in other channels like teams or even Microsoft 365.\n\n1. Click the **Publish** button in the top right-hand corner\n\u003Cbr\u003E\n    !IMAGE [step16.jpg](instructions279065/step16.jpg)\n\n1. Click the **Publish** button to publish your agent\n\u003Cbr\u003E\n    !IMAGE[publish-agent.png](instructions279065/publish-agent.png)\n\u003Cbr\u003E\n    The following dialog will be displayed you can close this and your agent will finish publishing in the background\n\u003Cbr\u003E\n    !IMAGE[publishing-agent.png](instructions279065/publishing-agent.png)\n1. Now that it\u2019s published, we need to make this available to use within Microsoft Teams. Select the **Channels** tab in the top menu\n\u003Cbr\u003E\n    !IMAGE[copilot-studio-channels.png](instructions279065/copilot-studio-channels.png)\n1. Under the list of channels, select **Microsoft Teams**\n\u003Cbr\u003E\n    !IMAGE[step19.png](instructions279065/step19.png)\n1. In the panel that opens on the right-hand side, select **Turn on Teams**\n\u003Cbr\u003E\n    !IMAGE [step20.png](instructions279065/step20.png)\n1. After Teams is turned on, you\u2019ll get a message letting you know the channel was added. Select **Open agent** to add your new agent to Teams\n\u003Cbr\u003E\n    !IMAGE[open-agent.png](instructions279065/open-agent.png)\n1. Choose **Use the web app instead**\n\u003Cbr\u003E\n    !IMAGE [step22.png](instructions279065/step22.png)\n1. You\u2019ll see a preview of your agent. Select **Add**\n\u003Cbr\u003E\n    !IMAGE [step23.png](instructions279065/step23.png)\n24. Your agent is now added and accessible in Microsoft Teams. Test your agent by asking \u002B\u002B\u002BWhat are the specs for the latest Surface laptop?\u002B\u002B\u002B in the prompt input and press Enter\n\u003Cbr\u003E\n    !IMAGE [step24.png](instructions279065/step24.png)\n\nCongratulations! You\u2019ve now built and published an agent to Microsoft Teams!\n\n===\n\n# Extending Agent With Custom Connectors\n\nIn the last portion of the workshop, we showed you how to build a agent that uses Generative Answers as a source of information.\n\nNow you\u0027ll step through how to build a custom connector that can be used as a plug in for your agents. Plugins allows agents to work with other systems expanding its capabilities beyond answering questions.\n\nIn this example we will work with an API that can look up order details and then extend that scenario by adding a method to update the delivery address of a returned order.\n\n1. Open Windows Explorer and open to \u002B\u002B\u002B**D:\\LabFiles\\ContosoApiApp\\ContosoApiApp**\u002B\u002B\u002B and open the **ContosoApiApp.sln** file.\n1. There might be a sign in to Visual Studio pop up, feel free to click **Close** in that screen.\n2. This is the solution we will be building on to create a custom connector for our agent. Before continuing press **Ctrl\u002B Shift \u002B B** to build the solution\n\u003Cbr\u003E\n    !IMAGE [step26.jpg](instructions279065/step26.jpg)\n3. While our app is technically set to run in HTTPS we are going to test it locally first Click the arrow next to **https** in the tool bar and select **http**\n\n    \u003E [!note] We will switch this back before publishing this to Microsoft Copilot Studio\n\n    !IMAGE [step27.jpg](instructions279065/step27.jpg)\n4. Click the **Run** button to run your application\n\u003Cbr\u003E\n    !IMAGE [step28.jpg](instructions279065/step28.jpg)\n5. Click **Yes** on the **Trust ASP.NET Core SSL Certificate** dialog\n\u003Cbr\u003E\n    !IMAGE [step69.jpg](instructions279065/step69.jpg)\n6. Click **Yes** on the security warning dialog to install the certificate\n\u003Cbr\u003E\n    !IMAGE [step70.jpg](instructions279065/step70.jpg)\n5. Once the application is running it will appear in a new browser window showing the details about the objects and methods you can test.\n\u003Cbr\u003E\n    !IMAGE [step29.jpg](instructions279065/step29.jpg)\n6. Click the **Get** method and then click the **Try it out** button to test the get method\n\u003Cbr\u003E\n    !IMAGE [step30.jpg](instructions279065/step30.jpg)\n7. Enter an order number (any number will work) then click the **Execute** button\n\u003Cbr\u003E\n    !IMAGE [step31.jpg](instructions279065/step31.jpg)\n8. Scroll down to see the response returned from the **GetOrderDetails** method\n\u003Cbr\u003E\n    !IMAGE [step32.jpg](instructions279065/step32.jpg)\n9. Close the browser window to stop the App running\n\n===\n\n# Add a New Method To The Connector\n\nNow you could publish the connector as is, but before we do lets add a new method that can update the delivery address for the order Swagger is being used to generate the comments for these methods, because of this when adding a new method we first need to provide information for what that method does, this information is also what the generative action engine will use to determine what method to call.\n\n1. Add the following code after the comment that says **Start Exercise Space**\n\u003Cbr\u003E\n    !IMAGE [step34.jpg](instructions279065/step34.jpg)\n\u003Cbr\u003E\n    **Code:**\n\n    \u0060\u0060\u0060\n    [SwaggerOperation(OperationId=\u0022UpdateDeliveryAddress\u0022,\n    Summary=\u0022Update delivery address\u0022,\n    Description= \u0022Update the delivery address for the order number provided then return the updated delivery details\u0022 )]\n    \u0060\u0060\u0060\n2. After the SwaggerOperation add in the definition for the HttpPost controller path\n\u003Cbr\u003E\n    **Code:**\n\n    \u0060\u0060\u0060\n    [HttpPost(Name = \u0022/UpdateDeliveryAddress/{orderNumber}/{street}/{city}/{state}/{zipcode}\u0022)]\n    \u0060\u0060\u0060\n3. Add a new Public method that returns an Order called **UpdateDeliveryAddress**\n\u003Cbr\u003E\n    **Code:**\n\n    \u0060\u0060\u0060\n    public Order UpdateDeliveryAddress()\n    {\n    }\n    \u0060\u0060\u0060\n4. Add the following **SwaggerParameters** to the **UpdateDeliveryAddress**\n\u003Cbr\u003E\n    **Code:**\n\n    \u0060\u0060\u0060\n    [SwaggerParameter(\u0022The Order number to be updated\u0022, Required= true)] string orderNumber,\n    [SwaggerParameter(\u0022The updated Street Address\u0022, Required=true)] string street,\n    [SwaggerParameter(\u0022The updated City name\u0022,Required= true)] string city,\n    [SwaggerParameter(\u0022The updated State\u0022, Required=true)] string state,\n    [SwaggerParameter(\u0022The udpated Zip Code\u0022, Required=true)] string zipcode\n    \u0060\u0060\u0060\n\n    The method should look similar to the image below\n\u003Cbr\u003E\n    !IMAGE [step37.jpg](instructions279065/step37.jpg)\n7. With the method defined add the following code between the curly braces\n\u003Cbr\u003E\n    **Code:**\n\n    \u0060\u0060\u0060\n    Order orderToUpdate = GetOrderDetails(orderNumber);\n    orderToUpdate.OrderDetails.ShippingAddress.Street = street;\n    orderToUpdate.OrderDetails.ShippingAddress.City = city;\n    orderToUpdate.OrderDetails.ShippingAddress.State = state;\n    orderToUpdate.OrderDetails.ShippingAddress.ZipCode = zipcode;\n    return orderToUpdate;\n    \u0060\u0060\u0060\n\n    the final code should look similar to the below\n\u003Cbr\u003E\n    !IMAGE [step38.jpg](instructions279065/step38.jpg)\n8. Run your application locally again by clicking the **run** button\n\u003Cbr\u003E\n    !IMAGE [step39.jpg](instructions279065/step39.jpg)\n9. There will be a new Post method available in the ContosoApiApp\n\u003Cbr\u003E\n    !IMAGE [step40.jpg](instructions279065/step40.jpg)\n10. Click the new **Post** method and click **Try it out**\n\u003Cbr\u003E\n    !IMAGE [step41.jpg](instructions279065/step41.jpg)\n11. Enter the required details and click **Execute** to test\n\u003Cbr\u003E\n    !IMAGE [step42.jpg](instructions279065/step42.jpg)\n12. Scroll down to see the response and confirm the method is responding as expected\n\u003Cbr\u003E\n    !IMAGE [step43.jpg](instructions279065/step43.jpg)\n13. Close the browser window to stop the application\n\n===\n\n# Adding Connector To Microsoft Copilot Studio\n\nWith the connector built and the new post method added it\u0027s time to add this to Microsoft Copilot Studio so it can be used by the Generative Actions engine.\n\n1. Before publishing the connector, we need to change the run mode from http back to https, click the arrow next to **http** and select **https**\n\u003Cbr\u003E\n    !IMAGE [step45.jpg](instructions279065/step45.jpg)\n1. In the solution explorer on the right side, **Right click\u003EConnected Services\u003EAdd\u003EMicrosoft Power Platform**\n\u003Cbr\u003E\n    !IMAGE [step46.jpg](instructions279065/step46.jpg)\n1. In the top right of the **Connect to Microsoft Power Platform** dialog click **Sign in\u003EWork, School or personal account** then use your tenant credentials to login to connect to the Power Platform.\n\n    **Username:** \u002B\u002B\u002B@lab.CloudCredential(CSBatch1).UserPrincipalName\u002B\u002B\u002B\n\n\n    **Password:** \u002B\u002B\u002B@lab.CloudCredential(CSBatch1).Password\u002B\u002B\u002B\n        \n    **Temporary Access Password:** \u002B\u002B\u002B@lab.Variable(TAP)\u002B\u002B\u002B\n    !IMAGE [step47.jpg](instructions279065/step47.jpg)\n1. Check to make sure your development environment (@lab.CloudCredential(CSBatch1).EnvironmentName) is selected and that the **Common Data Services Default Solution** is selected then click the **\u002B** button to create a new custom connector\n\u003Cbr\u003E\n    !IMAGE [step48.jpg](instructions279065/step48.jpg)\n1. Accept **Power Platform environment** and **Custom connector name** provided then click **Create**\n\u003Cbr\u003E\n    !IMAGE [step49.jpg](instructions279065/step49.jpg)\n1. Click the **\u002B** button to create a public dev tunnel this will allow us to debug the connector when it\u0027s called from our agent\n\u003Cbr\u003E\n    !IMAGE [step50.jpg](instructions279065/step50.jpg)\n1. Give your Dev tunnel a name then click the **Ok** button\n\u003Cbr\u003E\n    !IMAGE [step51.jpg](instructions279065/step51.jpg)\n1. Click **Next** to see a summary of the changes to be made\n\u003Cbr\u003E\n    !IMAGE [step52.jpg](instructions279065/step52.jpg)\n1. Click Finish to create the connector\n\u003Cbr\u003E\n    !IMAGE [image.png](instructions279065/image.png)\n1. Wait for the connector to be created then click **Close**\n\u003Cbr\u003E\n    !IMAGE [step54.jpg](instructions279065/step54.jpg)\n\n===\n\n# Adding the Contoso Plugin to your Agent\n\n1. Reopen the **Microsoft Edge** window from the start of the lab and click on the Copilot Studio tab\n1. Click on the **Settings** button on the right of the top nav bar\n\u003Cbr\u003E\n    !IMAGE [step56.jpg](instructions279065/step56.jpg)\n1. Click on **Generative AI** in the left navigation\n\u003Cbr\u003E\n    !IMAGE [step57.jpg](instructions279065/step57.jpg)\n1. Confirm that the **Generative** option is selected then click **Save**\n\u003Cbr\u003E\n    !IMAGE [step58.png](instructions279065/step58.png)\n1. Click on your agent in the left nav to return to the agent overview page\n\u003Cbr\u003E\n    !IMAGE [step59.jpg](instructions279065/step59.jpg)\n1. Click on **Actions** in the top nav\n\u003Cbr\u003E\n    !IMAGE [step60.jpg](instructions279065/step60.jpg)\n1. Click the **\u002B Add an action** button to add a new action\n\u003Cbr\u003E\n    !IMAGE [step61.jpg](instructions279065/step61.jpg)\n1. Enter \u002B\u002B\u002BContosoAPI\u002B\u002B\u002B in the search field and hit **Enter**\n\u003Cbr\u003E\n    !IMAGE [step62.jpg](instructions279065/step62.jpg)\n1. You will see 2 actions returned from your search, each of these represents one of the methods in the connector we just published from Visual Studio. Click **Get Order Details** to begin adding this action to your agent\n\u003Cbr\u003E\n    !IMAGE [step63.jpg](instructions279065/step63.jpg)\n1. Once the connector has loaded, in the End user authentication dropdown, select **Copilot author authentication** then click Next\n\u003Cbr\u003E\n    !IMAGE [step64.png](instructions279065/step64.png)\n1. Select **Outputs (15)** to switch to the outputs.\n\u003Cbr\u003E\n    !IMAGE [actions-select-outputs.png](instructions279065/actions-select-outputs.png)\n1. Select **Edit outputs** to edit the outputs.\n\u003Cbr\u003E\n    !IMAGE [actions-edit-outputs.png](instructions279065/actions-edit-outputs.png)\n1. Scroll all the way down and check the checkbox before **Respond to the user after running this action**.\n\u003Cbr\u003E\n    !IMAGE [actions-respond-to-user.png](instructions279065/actions-respond-to-user.png)\n1. This will show you that the action will send a message to the user that is dynamically generated by AI. Click **Save**.\n\u003Cbr\u003E\n    !IMAGE [actions-dynamically-generated-ai-save.png](instructions279065/actions-dynamically-generated-ai-save.png)\n1. Click **Next** to connect to the ContosoApiApp and add the connection\n\u003Cbr\u003E\n    !IMAGE [step65.jpg](instructions279065/step65.jpg)\n1. Click **Finish** to complete adding the plugin to the agent\n\u003Cbr\u003E\n    !IMAGE [step66.jpg](instructions279065/step66.jpg)\n1. Repeat steps 8-16 to add the other plugin from the ContosoApiApp once complete you should see both plugins listed as below\n\u003Cbr\u003E\n    !IMAGE [step67.jpg](instructions279065/step67.jpg)\n1. Return to Visual Studio and click the **Run** button next to the HTTPS flag to run your application in HTTPS\n\u003Cbr\u003E\n    !IMAGE [step68.jpg](instructions279065/step68.jpg)\n1. Click **Yes** on the **Microsoft Visual Studio** dialog to trust the IIS Express SSL certificate.\n\u003Cbr\u003E\n    !IMAGE [step71.jpg](instructions279065/step71.jpg)\n1. Click **Yes** on the final security warning dialog to install the IIS cert\n\u003Cbr\u003E\n    !IMAGE [step72.jpg](instructions279065/step72.jpg)\n1. Once the application is running a new browser window will open with a warning that you are about to connect to a developer tunnel click **Continue** to open your running application in Microsoft edge\n\u003Cbr\u003E\n    !IMAGE [step73.jpg](instructions279065/step73.jpg)\n1. With your application running return to Microsoft Copilot Studio in the **Test Copilot** pane click the Map button on the right to open the conversation map console\n\u003Cbr\u003E\n    !IMAGE [step74.jpg](instructions279065/step74.jpg)\n1. Now you can test your Copilot\u0027s new capabilities and see in real time how it is making calls to the plugins you just added. Enter \u002B\u002B\u002BWhat\u0027s my order details?\u002B\u002B\u002B and click send\n\u003Cbr\u003E\n    !IMAGE [step75.jpg](instructions279065/step75.jpg)\n1. In the **Conversation Map** pane, you can see how Copilot is pulling together the actions needed to complete your request. However, as you have not provided an order number to make the call to the service it has formulated a response to ask you for the missing details\n\u003Cbr\u003E\n    !IMAGE [step76.jpg](instructions279065/step76.jpg)\n1. Enter an order number and click send\n\u003Cbr\u003E\n    !IMAGE [step77.jpg](instructions279065/step77.jpg)\n\u003Cbr\u003E\n    You\u0027ll see the order number is passed to the actions and the results are returned to your agent\n\u003Cbr\u003E\n    !IMAGE [step78.jpg](instructions279065/step78.jpg)\n1. Click the reset button to start a new test session\n\u003Cbr\u003E\n    !IMAGE [step79.jpg](instructions279065/step79.jpg)\n1. Enter \u002B\u002B\u002BUpdate my delivery address for order 123456 to 1 Microsoft Way, Redmond 98052 WA\u002B\u002B\u002B and click send\n\u003Cbr\u003E\n    !IMAGE [update-delivery-address.png](instructions279065/update-delivery-address.png)\n1. This time Copilot Studio will find the right action and it will be smart enough to fill all the address details in the right inputs.\n\nCongratulations! You have successfully created a new agent, built and deployed a custom connector using Visual Studio!","DisplayId":"WRK530","LabTitle":"Build and extend agents with Microsoft Copilot studio","DurationMinutes":120,"LanguageId":1,"AiTranslationStatus":0,"PassingScore":0,"ScoringResultsDisplayType":0,"RawCutoffScore":0,"RawMaxScore":0,"EndOfLabScoreType":0,"EnableTaskProgressTracking":false,"EnableTaskAutoChecking":false,"VariablesJson":"{\u0022TAP\u0022:\u0022\u0022,\u0022TapID\u0022:\u0022\u0022}","ReplacementsJson":null,"LabProfileId":176682,"LabProfile":null,"OrganizationId":4487,"Organization":null,"ExternalInstructionsId":null,"ExternalInstruction":null,"LabInstances":null,"LabPreviewAccessTokens":null,"CheckOutDate":null,"CheckedOutById":null,"CheckedOutBy":null,"Created":"2024-09-12T16:50:17.617","CreatedById":1177516,"CreatedByName":"Damon Fout","LastModified":"2024-11-20T22:29:39","LastModifiedById":1677200,"LastModifiedByName":"April Dunnam"}